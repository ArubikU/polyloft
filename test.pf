// Ejemplo de uso del módulo IO para leer y guardar archivos

// 1. Escribir contenido en un archivo
println("=== Escribir archivo ===")
let mensaje = "¡Hola desde Polyloft!\nEste es un archivo de prueba.\n"
IO.writeFile("salida.txt", mensaje)
println("✓ Archivo 'salida.txt' creado")

// 2. Leer el contenido del archivo
println("\n=== Leer archivo ===")
let contenido = IO.readFile("salida.txt")
println("Contenido del archivo:")
println(contenido)

// 3. Agregar más contenido al archivo
println("\n=== Agregar contenido ===")
IO.appendFile("salida.txt", "Línea agregada con appendFile\n")
println("✓ Contenido agregado")

// 4. Leer el archivo actualizado
let contenidoActualizado = IO.readFile("salida.txt")
println("Contenido actualizado:")
println(contenidoActualizado)

// 5. Verificar si el archivo existe
println("\n=== Verificar archivo ===")
if IO.fileExists("salida.txt"):
    println("✓ El archivo existe")
    
    // Obtener información del archivo
    let info = IO.fileSize("salida.txt")
    println("Tamaño: #{info} bytes")
end

// 6. Copiar el archivo
println("\n=== Copiar archivo ===")
let bytesCopiados = IO.copyFile("salida.txt", "copia_salida.txt")
println("✓ Copiados #{bytesCopiados} bytes a 'copia_salida.txt'")

// 7. Leer archivo línea por línea
println("\n=== Leer líneas ===")
let lineas = IO.readLines("salida.txt")
println(Sys.type(lineas))
println("Total de líneas: #{lineas.length()}")
let i = 1
for linea in lineas:
    println("Línea #{i}: #{linea}")
    i = i + 1
end

// 8. Limpiar - eliminar archivos de prueba
println("\n=== Limpieza ===")
if IO.exists("salida.txt"):
    IO.deleteFile("salida.txt")
    println("✓ 'salida.txt' eliminado")
end

if IO.exists("copia_salida.txt"):
    IO.deleteFile("copia_salida.txt")
    println("✓ 'copia_salida.txt' eliminado")
end

println("\n¡Ejemplo completado!")